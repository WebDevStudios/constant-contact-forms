/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/ctct-plugin-admin/ajax.js":
/*!*********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/ajax.js ***!
  \*********************************************/
/***/ (function() {

eval("window.CTCTAJAX = {};\n(function (window, that) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.init = function () {\n    // Trigger any field modifications we need to do.\n    that.handleReviewAJAX();\n  };\n\n  // Handle saving the decision regarding the review prompt admin notice.\n  that.handleReviewAJAX = function () {\n    var reviewRequest = document.querySelector('#ctct-admin-notice-review_request');\n    if (reviewRequest) {\n      reviewRequest.addEventListener('click', function (e) {\n        e.preventDefault();\n        var ctctAction;\n        if (e.target.matches('button.notice-dismiss')) {\n          ctctAction = 'dismissed';\n        } else if (e.target.matches('.ctct-review')) {\n          ctctAction = 'reviewed';\n        }\n        var data = new FormData();\n        data.append('action', 'constant_contact_review_ajax_handler');\n        data.append('ctct_review_action', ctctAction);\n        if (reviewRequest.dataset.nonce) {\n          data.append('ctct_nonce', reviewRequest.dataset.nonce);\n        }\n        fetch(window.ajaxurl, options = {\n          method: 'POST',\n          body: data\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          if (response.success) {\n            reviewRequest.style.display = 'none';\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }\n  };\n  that.init();\n})(window, window.CTCTAJAX);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vYWpheC5qcyIsIm5hbWVzIjpbIndpbmRvdyIsIkNUQ1RBSkFYIiwidGhhdCIsImluaXQiLCJoYW5kbGVSZXZpZXdBSkFYIiwicmV2aWV3UmVxdWVzdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJjdGN0QWN0aW9uIiwidGFyZ2V0IiwibWF0Y2hlcyIsImRhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImRhdGFzZXQiLCJub25jZSIsImZldGNoIiwiYWpheHVybCIsIm9wdGlvbnMiLCJtZXRob2QiLCJib2R5IiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJzdHlsZSIsImRpc3BsYXkiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uc3RhbnQtY29udGFjdC1mb3Jtcy8uL2Fzc2V0cy9qcy9jdGN0LXBsdWdpbi1hZG1pbi9hamF4LmpzPzhlOTQiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LkNUQ1RBSkFYID0ge307XG5cbihmdW5jdGlvbiAod2luZG93LCB0aGF0KSB7XG5cblx0LyoqXG5cdCAqIEBjb25zdHJ1Y3RvclxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMC4wXG5cdCAqL1xuXHR0aGF0LmluaXQgPSAoKSA9PiB7XG5cblx0XHQvLyBUcmlnZ2VyIGFueSBmaWVsZCBtb2RpZmljYXRpb25zIHdlIG5lZWQgdG8gZG8uXG5cdFx0dGhhdC5oYW5kbGVSZXZpZXdBSkFYKCk7XG5cdH07XG5cblx0Ly8gSGFuZGxlIHNhdmluZyB0aGUgZGVjaXNpb24gcmVnYXJkaW5nIHRoZSByZXZpZXcgcHJvbXB0IGFkbWluIG5vdGljZS5cblx0dGhhdC5oYW5kbGVSZXZpZXdBSkFYID0gKCkgPT4ge1xuXHRcdGNvbnN0IHJldmlld1JlcXVlc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY3RjdC1hZG1pbi1ub3RpY2UtcmV2aWV3X3JlcXVlc3QnKTtcblx0XHRpZiAocmV2aWV3UmVxdWVzdCkge1xuXHRcdFx0cmV2aWV3UmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0bGV0IGN0Y3RBY3Rpb247XG5cdFx0XHRcdGlmIChlLnRhcmdldC5tYXRjaGVzKCdidXR0b24ubm90aWNlLWRpc21pc3MnKSkge1xuXHRcdFx0XHRcdGN0Y3RBY3Rpb24gPSAnZGlzbWlzc2VkJztcblx0XHRcdFx0fSBlbHNlIGlmIChlLnRhcmdldC5tYXRjaGVzKCcuY3RjdC1yZXZpZXcnKSkge1xuXHRcdFx0XHRcdGN0Y3RBY3Rpb24gPSAncmV2aWV3ZWQnO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y29uc3QgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuXHRcdFx0XHRkYXRhLmFwcGVuZCgnYWN0aW9uJywgJ2NvbnN0YW50X2NvbnRhY3RfcmV2aWV3X2FqYXhfaGFuZGxlcicpO1xuXHRcdFx0XHRkYXRhLmFwcGVuZCgnY3RjdF9yZXZpZXdfYWN0aW9uJywgY3RjdEFjdGlvbik7XG5cblx0XHRcdFx0aWYgKHJldmlld1JlcXVlc3QuZGF0YXNldC5ub25jZSkge1xuXHRcdFx0XHRcdGRhdGEuYXBwZW5kKCdjdGN0X25vbmNlJywgcmV2aWV3UmVxdWVzdC5kYXRhc2V0Lm5vbmNlKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGZldGNoKHdpbmRvdy5hamF4dXJsLCBvcHRpb25zID0ge1xuXHRcdFx0XHRcdG1ldGhvZDogJ1BPU1QnLCBib2R5OiBkYXRhLFxuXHRcdFx0XHR9KVxuXHRcdFx0XHRcdC50aGVuKChyZXNwb25zZSkgPT4gcmVzcG9uc2UuanNvbigpKVxuXHRcdFx0XHRcdC50aGVuKChyZXNwb25zZSkgPT4ge1xuXHRcdFx0XHRcdFx0aWYgKHJlc3BvbnNlLnN1Y2Nlc3MpIHtcblx0XHRcdFx0XHRcdFx0cmV2aWV3UmVxdWVzdC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pLmNhdGNoKChlcnJvcikgPT4ge1xuXHRcdFx0XHRcdGNvbnNvbGUubG9nKGVycm9yKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cblx0dGhhdC5pbml0KCk7XG59KHdpbmRvdywgd2luZG93LkNUQ1RBSkFYKSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLFFBQVEsR0FBRyxDQUFDLENBQUM7QUFFbkIsV0FBVUQsTUFBTSxFQUFFRSxJQUFJLEVBQUU7RUFFeEI7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0NBLElBQUksQ0FBQ0MsSUFBSSxHQUFHLFlBQU07SUFFakI7SUFDQUQsSUFBSSxDQUFDRSxnQkFBZ0IsQ0FBQyxDQUFDO0VBQ3hCLENBQUM7O0VBRUQ7RUFDQUYsSUFBSSxDQUFDRSxnQkFBZ0IsR0FBRyxZQUFNO0lBQzdCLElBQU1DLGFBQWEsR0FBR0MsUUFBUSxDQUFDQyxhQUFhLENBQUMsbUNBQW1DLENBQUM7SUFDakYsSUFBSUYsYUFBYSxFQUFFO01BQ2xCQSxhQUFhLENBQUNHLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDQyxDQUFDLEVBQUs7UUFDOUNBLENBQUMsQ0FBQ0MsY0FBYyxDQUFDLENBQUM7UUFDbEIsSUFBSUMsVUFBVTtRQUNkLElBQUlGLENBQUMsQ0FBQ0csTUFBTSxDQUFDQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsRUFBRTtVQUM5Q0YsVUFBVSxHQUFHLFdBQVc7UUFDekIsQ0FBQyxNQUFNLElBQUlGLENBQUMsQ0FBQ0csTUFBTSxDQUFDQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUU7VUFDNUNGLFVBQVUsR0FBRyxVQUFVO1FBQ3hCO1FBRUEsSUFBTUcsSUFBSSxHQUFHLElBQUlDLFFBQVEsQ0FBQyxDQUFDO1FBQzNCRCxJQUFJLENBQUNFLE1BQU0sQ0FBQyxRQUFRLEVBQUUsc0NBQXNDLENBQUM7UUFDN0RGLElBQUksQ0FBQ0UsTUFBTSxDQUFDLG9CQUFvQixFQUFFTCxVQUFVLENBQUM7UUFFN0MsSUFBSU4sYUFBYSxDQUFDWSxPQUFPLENBQUNDLEtBQUssRUFBRTtVQUNoQ0osSUFBSSxDQUFDRSxNQUFNLENBQUMsWUFBWSxFQUFFWCxhQUFhLENBQUNZLE9BQU8sQ0FBQ0MsS0FBSyxDQUFDO1FBQ3ZEO1FBRUFDLEtBQUssQ0FBQ25CLE1BQU0sQ0FBQ29CLE9BQU8sRUFBRUMsT0FBTyxHQUFHO1VBQy9CQyxNQUFNLEVBQUUsTUFBTTtVQUFFQyxJQUFJLEVBQUVUO1FBQ3ZCLENBQUMsQ0FBQyxDQUNBVSxJQUFJLENBQUMsVUFBQ0MsUUFBUTtVQUFBLE9BQUtBLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDLENBQUM7UUFBQSxFQUFDLENBQ25DRixJQUFJLENBQUMsVUFBQ0MsUUFBUSxFQUFLO1VBQ25CLElBQUlBLFFBQVEsQ0FBQ0UsT0FBTyxFQUFFO1lBQ3JCdEIsYUFBYSxDQUFDdUIsS0FBSyxDQUFDQyxPQUFPLEdBQUcsTUFBTTtVQUNyQztRQUNELENBQUMsQ0FBQyxDQUFDQyxLQUFLLENBQUMsVUFBQ0MsS0FBSyxFQUFLO1VBQ3BCQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0YsS0FBSyxDQUFDO1FBQ25CLENBQUMsQ0FBQztNQUNILENBQUMsQ0FBQztJQUNIO0VBQ0QsQ0FBQztFQUVEN0IsSUFBSSxDQUFDQyxJQUFJLENBQUMsQ0FBQztBQUNaLENBQUMsRUFBQ0gsTUFBTSxFQUFFQSxNQUFNLENBQUNDLFFBQVEsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/ajax.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/builder.js":
/*!************************************************!*\
  !*** ./assets/js/ctct-plugin-admin/builder.js ***!
  \************************************************/
/***/ (function() {

eval("function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nwindow.CTCTBuilder = {};\n(function (window, $, that) {\n  var required_items;\n\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.init = function () {\n    // If we do actually have an email field set, then remove our error.\n    var emailField = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox option[value=\"email\"]');\n    var selectedField = Array.from(emailField).filter(function (option) {\n      return option.selected;\n    });\n    if (selectedField.length) {\n      var noEmailError = document.querySelector('#ctct-no-email-error');\n      if (noEmailError) {\n        noEmailError.style.display = 'none';\n      }\n    }\n\n    // Cache it all.\n    that.cache();\n\n    // Bind our events.\n    that.bindEvents();\n\n    // Bind our select dropdown events.\n    that.selectBinds();\n\n    // Trigger any field modifications we need to do.\n    that.modifyFields();\n\n    // Make description non-draggable, so we don't run into weird cmb2 issues.\n    var cmb2handle = document.querySelectorAll('#ctct_0_description_metabox h2.hndle');\n    if (cmb2handle) {\n      Array.from(cmb2handle).forEach(function (hndle) {\n        hndle.classList.remove('ui-sortable-handle', 'hndle');\n      });\n    }\n\n    // Inject our new labels for the up/down CMB2 buttons, so they can be properly localized.\n    // Because we're using :after, we can't use .css() to do this, we need to inject a style tag.\n    var headTag = document.querySelector('head');\n    var styleTag = document.createElement('style');\n    styleTag.textContent = \"#cmb2-metabox-ctct_2_fields_metabox a.move-up::after { content: \\\"\" + window.ctctTexts.move_up + \"\\\" }\";\n    styleTag.textContent += \"#cmb2-metabox-ctct_2_fields_metabox a.move-down::after { content: \\\"\" + window.ctctTexts.move_down + \"\\\" }\";\n    headTag.appendChild(styleTag);\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.cache = function () {\n    that.cache = {\n      window: window,\n      body: document.querySelector('body')\n    };\n    that.isLeaveWarningBound = false;\n  };\n\n  // Triggers our leave warning if we modify things in the form.\n  that.bindLeaveWarning = function () {\n    // Don't double-bind it.\n    if (!that.isLeaveWarningBound) {\n      // Bind our error that displays before leaving page.\n      that.cache.window.addEventListener('beforeunload', that.bindMessage);\n\n      // Save our state.\n      that.isLeaveWarningBound = true;\n    }\n  };\n\n  /**\n   * Removes our binding of our leave warning.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.unbindLeaveWarning = function () {\n    that.cache.window.removeEventListener('beforeunload', that.bindMessage);\n  };\n\n  /**\n   * Handles the beforeunload callback and display.\n   *\n   * @param e beforeunload event.\n   * @since NEXT\n   */\n  that.bindMessage = function (e) {\n    e.preventDefault();\n    e.returnValue = '';\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.bindEvents = function () {\n    var submitted = document.querySelector('#post');\n    if (submitted) {\n      document.addEventListener('submit', function () {\n        var disabledEmails = document.querySelectorAll('.ctct-email-disabled');\n        if (disabledEmails) {\n          Array.from(disabledEmails).forEach(function (item) {\n            item.classList.remove('disabled');\n            item.removeAttribute('disabled');\n          });\n        }\n        that.unbindLeaveWarning();\n      });\n    }\n    var cmb2inputs = document.querySelectorAll('.cmb2-wrap input, .cmb2-wrap textarea');\n    Array.from(cmb2inputs).forEach(function (input_item) {\n      input_item.addEventListener('input', function () {\n        if ('undefined' !== typeof tinyMCE) {\n          that.bindLeaveWarning();\n        }\n      });\n    });\n\n    // Disable email options on row change trigger.\n    // `cmb2_shift_rows_complete` is a custom jQuery based event, so we are leaving this selector.\n    $(document).on('cmb2_shift_rows_complete', function () {\n      that.modifyFields();\n      that.bindLeaveWarning();\n      that.removeDuplicateMappings();\n    });\n\n    // If we get a row added, then do our stuff.\n    // `cmb2_add_row` is a custom jQuery based event, so we are leaving this selector.\n    $(document).on('cmb2_add_row', function (newRow) {\n      // eslint-disable-line no-unused-vars\n      var groupPostBoxes = document.querySelectorAll('#custom_fields_group_repeat .postbox');\n      if (groupPostBoxes) {\n        var lastBox = _toConsumableArray(groupPostBoxes).pop();\n        var boxSelect = lastBox.querySelector('.map select');\n        if (boxSelect) {\n          boxSelect.value = 'none';\n        }\n      }\n      that.modifyFields();\n      that.selectBinds();\n      that.removeDuplicateMappings();\n    });\n    that.removeDuplicateMappings();\n    var cssReset = document.querySelector('#ctct-reset-css');\n    if (cssReset) {\n      cssReset.addEventListener('click', function (e) {\n        e.preventDefault();\n        var selectFields = ['#_ctct_form_description_font_size', '#_ctct_form_submit_button_font_size', '#_ctct_form_label_placement'];\n        selectFields.forEach(function (fieldSelector) {\n          var field = document.querySelector(fieldSelector);\n          if (field) {\n            field.selectedIndex = 0;\n          }\n        });\n        var textFields = ['#_ctct_form_padding_top', '#_ctct_form_padding_bottom', '#_ctct_form_padding_left', '#_ctct_form_padding_right', '#_ctct_input_custom_classes'];\n        textFields.forEach(function (textSelector) {\n          var text = document.querySelector(textSelector);\n          if (text) {\n            text.value = '';\n          }\n        });\n\n        // Clear out color pickers.\n        var pickerClears = document.querySelectorAll('.wp-picker-clear');\n        if (pickerClears) {\n          Array.from(pickerClears).forEach(function (picker) {\n            picker.click();\n          });\n        }\n      });\n    }\n    window.addEventListener('load', function () {\n      var addressBox = document.querySelector('#address_settings');\n      if (addressBox) {\n        var includeItems = addressBox.querySelectorAll('.cmb2-id--ctct-address-fields-include input[type=\"checkbox\"]');\n        var checkedItems = addressBox.querySelectorAll('.cmb2-id--ctct-address-fields-include input[type=\"checkbox\"]:checked');\n        required_items = addressBox.querySelectorAll('.cmb2-id--ctct-address-fields-require input[type=\"checkbox\"]');\n        if (checkedItems.length === 0) {\n          Array.from(required_items).forEach(function (item) {\n            item.setAttribute('disabled', true);\n          });\n        }\n        Array.from(includeItems).forEach(function (item) {\n          item.addEventListener('change', that.addressChange);\n        });\n      }\n    });\n  };\n\n  /**\n   * Handle the enabled/disabled state of rwquired items when address \"include\" options change.\n   *\n   * @param e Checkbox being checked.\n   */\n  that.addressChange = function (e) {\n    var item = e.target;\n    if (item.checked) {\n      Array.from(required_items).forEach(function (required_item) {\n        if (item.value === required_item.value) {\n          required_item.removeAttribute('disabled');\n        }\n      });\n    } else {\n      Array.from(required_items).forEach(function (required_item) {\n        if (item.value === required_item.value) {\n          required_item.checked = false;\n          required_item.setAttribute('disabled', true);\n        }\n      });\n    }\n  };\n\n  /**\n   * When .cmb2_select <selects> get changed, do some actions.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.selectBinds = function () {\n    // For each fields select.\n    var selects = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox .cmb2_select');\n    if (selects) {\n      Array.from(selects).forEach(function (select) {\n        select.addEventListener('change', function () {\n          // Modify our fields.\n          that.modifyFields();\n\n          // Don't allow duplicate mappings in form.\n          that.removeDuplicateMappings();\n\n          // Bind our leave warning.\n          that.bindLeaveWarning();\n          var customField = document.querySelectorAll('.form-field-is-custom-field');\n          if (customField) {\n            Array.from(customField).forEach(function (field) {\n              field.addEventListener('keyup', that.noUniqueWarning);\n            });\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * Validates whether or not all of our custom field labels all have unique labels.\n   */\n  that.validateUniqueFieldLabels = function () {\n    var cfValuesOrig = document.querySelectorAll('.form-field-is-custom-field');\n    var cfValues; // Leaving as `let` since we are need some hoisting.\n    if (cfValuesOrig) {\n      cfValues = Array.from(cfValuesOrig).map(function (item) {\n        return item.value;\n      });\n    }\n    var cfValuesTotal = cfValues.length;\n    var cfValuesFiltered = cfValues.filter(function (item, position) {\n      return cfValues.indexOf(item) === position;\n    });\n    var cfValuesFilteredTotal = cfValuesFiltered.length;\n    return cfValuesTotal === cfValuesFilteredTotal;\n  };\n\n  /**\n   * Toggle inline warning that a given custom field label is not a unique value.\n   * @param event\n   */\n  that.noUniqueWarning = function (event) {\n    var ctctCustomField = event.currentTarget;\n    var siblings = _toConsumableArray(ctctCustomField.parentElement.children);\n    if (siblings.length === 0) {\n      return;\n    }\n    if (that.validateUniqueFieldLabels()) {\n      siblings.forEach(function (sibling) {\n        if (sibling.classList.contains('ctct-warning')) {\n          sibling.classList.remove('ctct-warning-no-unqiue');\n        }\n      });\n    } else {\n      siblings.forEach(function (sibling) {\n        if (sibling.classList.contains('ctct-warning')) {\n          sibling.classList.add('ctct-warning-no-unqiue');\n        }\n      });\n    }\n  };\n\n  /**\n   * We need to manipulate our form builder a bit. We do this here.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.modifyFields = function () {\n    // Set that we haven't found an email.\n    var foundEmail = false; // Leaving as let due to use as boolean flag.\n    var cfnumber = 1; // Leaving as let due to incrementor usage.\n\n    var fieldgroups = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox #custom_fields_group_repeat .cmb-repeatable-grouping');\n    if (fieldgroups) {\n      Array.from(fieldgroups).forEach(function (field, key) {\n        var fieldList = field.querySelector('.cmb-field-list');\n        var removeButton = fieldList.querySelector('.cmb-remove-group-row');\n        var requiredToggle = fieldList.querySelector('.required input[type=checkbox]');\n        var requiredRow = requiredToggle.closest('.cmb-row');\n        var map = fieldList.querySelector('.map select option:checked');\n        var mapName = ''; // Leaving as `let` due to conditional assignment\n        if (map && map.text) {\n          mapName = map.text;\n        }\n        var fieldTitle = field.querySelector('h3');\n        var fieldLabel = field.querySelector('input[name*=\"_ctct_field_label\"]');\n        var fieldDesc = field.querySelector('input[name*=\"_ctct_field_desc\"]');\n        if (mapName === 'Custom Text Field') {\n          mapName += ' ' + cfnumber.toString();\n          cfnumber++;\n        }\n\n        // Set our field row to be the name of the selected option.\n        fieldTitle.innerText = mapName;\n        // If we have a blank field label, then use the name of the field to fill it in.\n        if (mapName && 0 === fieldLabel.value.length) {\n          fieldLabel.value = mapName;\n        }\n        fieldLabel.classList.add('ctct-label-filled');\n        var fieldDropdown = field.querySelector('select');\n        // If we haven't yet found an email field, and this is our email field.\n        if (!foundEmail && map !== null) {\n          if ('email' === map.value) {\n            // Set that we found an email field.\n            foundEmail = true;\n\n            // Make it required.\n            requiredToggle.checked = true;\n            if (fieldDropdown) {\n              fieldDropdown.classList.add('disabled', 'ctct-email-disabled');\n              fieldDropdown.disabled = true;\n            }\n            requiredRow.style.display = 'none';\n            removeButton.style.display = 'none';\n          }\n        } else {\n          if (fieldDropdown) {\n            fieldDropdown.classList.remove('disabled', 'ctct-email-disabled');\n            fieldDropdown.disabled = false;\n          }\n          requiredRow.style.display = 'block';\n          removeButton.style.display = 'block';\n          if (map !== null) {\n            if ('custom' === map.value) {\n              fieldLabel.classList.add('form-field-is-custom-field');\n            } else {\n              fieldLabel.classList.remove('form-field-is-custom-field');\n            }\n          }\n        }\n        if (ctct_admin_placeholders) {\n          var placeholder = ctct_admin_placeholders[fieldDropdown.value];\n          if (placeholder && placeholder.length && fieldDesc) {\n            fieldDesc.setAttribute('placeholder', 'Example: ' + placeholder);\n          } else if (ctct_admin_placeholders.default) {\n            fieldDesc.setAttribute('placeholder', ctct_admin_placeholders.default);\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * Go through all dropdowns, and remove used options.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.removeDuplicateMappings = function () {\n    var usedMappings = []; // Leaving as `let` due to changing array indices.\n    var dropdowns = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox #custom_fields_group_repeat .cmb-repeatable-grouping select');\n\n    // For each dropdown, build up our array of used values.\n    Array.from(dropdowns).forEach(function (dropdown, index) {\n      usedMappings.push(dropdown.value);\n\n      // Re-show all the children options we may have hidden.\n      Array.from(dropdown.options).forEach(function (item) {\n        item.style.display = 'inline';\n      });\n    });\n    usedMappings.forEach(function (mapping) {\n      // But only do it if the value isn't one of our custom ones.\n      if ('custom' === mapping || 'custom_text_area' === mapping) {\n        return;\n      }\n\n      // Remove all options from our dropdowns with the value.\n      Array.from(dropdowns).forEach(function (dropdown) {\n        Array.from(dropdown.options).forEach(function (item) {\n          if (item.value === mapping && item.selected !== true) {\n            item.style.display = 'none';\n          }\n        });\n      });\n    });\n  };\n  that.init();\n})(window, jQuery, window.CTCTBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/builder.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/clipboard.js":
/*!**************************************************!*\
  !*** ./assets/js/ctct-plugin-admin/clipboard.js ***!
  \**************************************************/
/***/ (function() {

eval("function _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { if (r) i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n;else { var o = function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); }; o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2); } }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nwindow.CTCTClipboard = {};\n(function (window, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.cache = function () {\n    app.cache = {\n      window: window,\n      copyshortcode: document.querySelectorAll('.ctct-shortcode-wrap')\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.bindEvents = function () {\n    // Add click event for copy buttons.\n    if (app.cache.copyshortcode) {\n      Array.from(app.cache.copyshortcode).forEach(function (element) {\n        var input = element.querySelector('input');\n        var button = element.querySelector('button');\n        if (input && button) {\n          button.addEventListener('click', /*#__PURE__*/function () {\n            var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(e) {\n              var text, reset, _t;\n              return _regenerator().w(function (_context) {\n                while (1) switch (_context.n) {\n                  case 0:\n                    if (!(!window.isSecureContext || !navigator.clipboard)) {\n                      _context.n = 1;\n                      break;\n                    }\n                    return _context.a(2);\n                  case 1:\n                    e.preventDefault();\n                    // Select the input.\n                    input.select();\n                    input.setSelectionRange(0, 99999); // For mobile devices.\n                    text = input.value;\n                    _context.p = 2;\n                    _context.n = 3;\n                    return navigator.clipboard.writeText(text);\n                  case 3:\n                    // visual feedback that task is completed.\n                    reset = button.innerHTML;\n                    e.target.textContent = button.dataset.copied;\n\n                    // Reset button text.\n                    setTimeout(function () {\n                      e.target.textContent = reset;\n                    }, 700);\n                    _context.n = 5;\n                    break;\n                  case 4:\n                    _context.p = 4;\n                    _t = _context.v;\n                    console.error('Failed to copy!', _t);\n                  case 5:\n                    return _context.a(2);\n                }\n              }, _callee, null, [[2, 4]]);\n            }));\n            return function (_x) {\n              return _ref.apply(this, arguments);\n            };\n          }());\n        }\n      });\n    }\n  };\n  app.init();\n})(window, window.CTCTClipboard);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/clipboard.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/forms.js":
/*!**********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/forms.js ***!
  \**********************************************/
/***/ (function() {

eval("window.CTCTForms = {};\n(function (window, that) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.init = function () {\n    that.cache();\n    that.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.cache = function () {\n    that.cache = {\n      window: window,\n      disconnect: '.ctct-disconnect'\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.bindEvents = function () {\n    var disconnect = document.querySelectorAll(that.cache.disconnect);\n    if (disconnect) {\n      Array.from(disconnect).forEach(function (item) {\n        item.addEventListener('click', function () {\n          return confirm(window.ctctTexts.disconnectconfirm);\n        });\n      });\n    }\n  };\n  that.init();\n})(window, window.CTCTForms);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vZm9ybXMuanMiLCJuYW1lcyI6WyJ3aW5kb3ciLCJDVENURm9ybXMiLCJ0aGF0IiwiaW5pdCIsImNhY2hlIiwiYmluZEV2ZW50cyIsImRpc2Nvbm5lY3QiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwiaXRlbSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb25maXJtIiwiY3RjdFRleHRzIiwiZGlzY29ubmVjdGNvbmZpcm0iXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnN0YW50LWNvbnRhY3QtZm9ybXMvLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vZm9ybXMuanM/YTEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuQ1RDVEZvcm1zID0ge307XG5cbihmdW5jdGlvbiAod2luZG93LCB0aGF0KSB7XG5cblx0LyoqXG5cdCAqIEBjb25zdHJ1Y3RvclxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMC4wXG5cdCAqL1xuXHR0aGF0LmluaXQgPSAoKSA9PiB7XG5cdFx0dGhhdC5jYWNoZSgpO1xuXHRcdHRoYXQuYmluZEV2ZW50cygpO1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBDYWNoZSBET00gZWxlbWVudHMuXG5cdCAqXG5cdCAqIEBhdXRob3IgQ29uc3RhbnQgQ29udGFjdFxuXHQgKiBAc2luY2UgMS4wLjBcblx0ICovXG5cdHRoYXQuY2FjaGUgPSAoKSA9PiB7XG5cdFx0dGhhdC5jYWNoZSA9IHtcblx0XHRcdHdpbmRvdyAgICA6IHdpbmRvdyxcblx0XHRcdGRpc2Nvbm5lY3Q6ICcuY3RjdC1kaXNjb25uZWN0Jyxcblx0XHR9O1xuXHR9O1xuXG5cdC8qKlxuXHQgKiBBdHRhY2ggY2FsbGJhY2tzIHRvIGV2ZW50cy5cblx0ICpcblx0ICogQGF1dGhvciBDb25zdGFudCBDb250YWN0XG5cdCAqIEBzaW5jZSAxLjAuMFxuXHQgKi9cblx0dGhhdC5iaW5kRXZlbnRzID0gKCkgPT4ge1xuXHRcdGNvbnN0IGRpc2Nvbm5lY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoYXQuY2FjaGUuZGlzY29ubmVjdCk7XG5cdFx0aWYgKGRpc2Nvbm5lY3QpIHtcblx0XHRcdEFycmF5LmZyb20oZGlzY29ubmVjdCkuZm9yRWFjaCgoaXRlbSkgPT4ge1xuXHRcdFx0XHRpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiBjb25maXJtKHdpbmRvdy5jdGN0VGV4dHMuZGlzY29ubmVjdGNvbmZpcm0pO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fTtcblxuXHR0aGF0LmluaXQoKTtcblxufSh3aW5kb3csIHdpbmRvdy5DVENURm9ybXMpKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsU0FBUyxHQUFHLENBQUMsQ0FBQztBQUVwQixXQUFVRCxNQUFNLEVBQUVFLElBQUksRUFBRTtFQUV4QjtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDQ0EsSUFBSSxDQUFDQyxJQUFJLEdBQUcsWUFBTTtJQUNqQkQsSUFBSSxDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUNaRixJQUFJLENBQUNHLFVBQVUsQ0FBQyxDQUFDO0VBQ2xCLENBQUM7O0VBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0NILElBQUksQ0FBQ0UsS0FBSyxHQUFHLFlBQU07SUFDbEJGLElBQUksQ0FBQ0UsS0FBSyxHQUFHO01BQ1pKLE1BQU0sRUFBTUEsTUFBTTtNQUNsQk0sVUFBVSxFQUFFO0lBQ2IsQ0FBQztFQUNGLENBQUM7O0VBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0NKLElBQUksQ0FBQ0csVUFBVSxHQUFHLFlBQU07SUFDdkIsSUFBTUMsVUFBVSxHQUFHQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDTixJQUFJLENBQUNFLEtBQUssQ0FBQ0UsVUFBVSxDQUFDO0lBQ25FLElBQUlBLFVBQVUsRUFBRTtNQUNmRyxLQUFLLENBQUNDLElBQUksQ0FBQ0osVUFBVSxDQUFDLENBQUNLLE9BQU8sQ0FBQyxVQUFDQyxJQUFJLEVBQUs7UUFDeENBLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07VUFDcEMsT0FBT0MsT0FBTyxDQUFDZCxNQUFNLENBQUNlLFNBQVMsQ0FBQ0MsaUJBQWlCLENBQUM7UUFDbkQsQ0FBQyxDQUFDO01BQ0gsQ0FBQyxDQUFDO0lBQ0g7RUFDRCxDQUFDO0VBRURkLElBQUksQ0FBQ0MsSUFBSSxDQUFDLENBQUM7QUFFWixDQUFDLEVBQUNILE1BQU0sRUFBRUEsTUFBTSxDQUFDQyxTQUFTLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/forms.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/index.js":
/*!**********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax */ \"./assets/js/ctct-plugin-admin/ajax.js\");\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ajax__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./builder */ \"./assets/js/ctct-plugin-admin/builder.js\");\n/* harmony import */ var _builder__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_builder__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./forms */ \"./assets/js/ctct-plugin-admin/forms.js\");\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_forms__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modal */ \"./assets/js/ctct-plugin-admin/modal.js\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _optins__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./optins */ \"./assets/js/ctct-plugin-admin/optins.js\");\n/* harmony import */ var _optins__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_optins__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _clipboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clipboard */ \"./assets/js/ctct-plugin-admin/clipboard.js\");\n/* harmony import */ var _clipboard__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_clipboard__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _required_lists__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./required-lists */ \"./assets/js/ctct-plugin-admin/required-lists.js\");\n/* harmony import */ var _required_lists__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_required_lists__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uc3RhbnQtY29udGFjdC1mb3Jtcy8uL2Fzc2V0cy9qcy9jdGN0LXBsdWdpbi1hZG1pbi9pbmRleC5qcz85MjlhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi9hamF4JztcbmltcG9ydCAnLi9idWlsZGVyJztcbmltcG9ydCAnLi9mb3Jtcyc7XG5pbXBvcnQgJy4vbW9kYWwnO1xuaW1wb3J0ICcuL29wdGlucyc7XG5pbXBvcnQgJy4vY2xpcGJvYXJkJztcbmltcG9ydCAnLi9yZXF1aXJlZC1saXN0cyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/index.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/modal.js":
/*!**********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/modal.js ***!
  \**********************************************/
/***/ (function() {

eval("window.CTCTModal = {};\n(function (window, $, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.cache = function () {\n    app.cache = {\n      window: window,\n      notConnectedModalSelector: document.querySelector('#ctct-not-connected-modal'),\n      notConnectedModalClose: document.querySelector('#ctct-not-connected-modal .ctct-modal-close'),\n      textareaModal: document.querySelector('#ctct-custom-textarea-modal'),\n      textareaLink: document.querySelector('#ctct-open-textarea-info'),\n      textareaModalClose: document.querySelector('#ctct-custom-textarea-modal .ctct-modal-close'),\n      deleteLogLink: document.querySelector('#deletelog')\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.bindEvents = function () {\n    if (app.cache.notConnectedModalClose) {\n      app.cache.notConnectedModalClose.addEventListener('click', function (e) {\n        e.preventDefault();\n        app.cache.notConnectedModalSelector.classList.remove('ctct-modal-open');\n        var data = new FormData();\n        data.append('action', 'ctct_dismiss_first_modal');\n        data.append('ctct_is_dismissed', 'true');\n        fetch(window.ajaxurl, options = {\n          method: 'POST',\n          body: data\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          if ('undefined' === typeof response.success) {\n            return false;\n          }\n          console.log(response.data.message);\n        });\n      });\n    }\n    if (app.cache.textareaModalClose) {\n      app.cache.textareaModalClose.addEventListener('click', function (e) {\n        app.cache.textareaModal.classList.remove('ctct-modal-open');\n      });\n    }\n    if (app.cache.textareaLink) {\n      app.cache.textareaLink.addEventListener('click', function () {\n        app.cache.textareaModal.classList.add('ctct-modal-open');\n      });\n    }\n    if (app.cache.deleteLogLink) {\n      app.cache.deleteLogLink.addEventListener('click', function (event) {\n        event.preventDefault();\n\n        // Get the link that was clicked on so we can redirect to it if the user confirms.\n        var deleteLogLinkHref = event.currentTarget.getAttribute('href');\n        $('#confirmdelete').dialog({\n          resizable: false,\n          height: 'auto',\n          width: 400,\n          modal: true,\n          buttons: {\n            'Yes': function Yes() {\n              // If the user confirms the action, redirect them to the deletion page.\n              window.location.replace(deleteLogLinkHref);\n            },\n            'Cancel': function Cancel() {\n              $('#confirmdelete').closest('.ui-dialog-content').dialog('close');\n            }\n          }\n        });\n      });\n    }\n  };\n  app.init();\n})(window, jQuery, window.CTCTModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/modal.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/optins.js":
/*!***********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/optins.js ***!
  \***********************************************/
/***/ (function() {

eval("window.CTCT_OptIns = {};\n(function (window, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.cache = function () {\n    app.cache = {\n      optinNoConn: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox #_ctct_opt_in_not_connected'),\n      list: document.querySelectorAll('#cmb2-metabox-ctct_0_list_metabox .attached-posts-wrap .retrieved li'),\n      title: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox .cmb2-id-email-optin-title'),\n      optin: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox .cmb2-id--ctct-opt-in'),\n      instruct: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox .cmb2-id--ctct-opt-in-instructions')\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.bindEvents = function () {\n    if (app.cache.optinNoConn.length) {\n      app.toggleNoConnectionFields();\n\n      // Bind to fire when needed.\n      Array.from(app.cache.optinNoConn).forEach(function (item) {\n        item.addEventListener('change', function () {\n          app.toggleNoConnectionFields();\n        });\n      });\n    } else {\n      // Fire once to get our loaded state set up.\n      app.toggleConnectionFields();\n\n      // Bind to fire when needed.\n      Array.from(app.cache.list).forEach(function (item) {\n        item.addEventListener('change', function () {\n          app.toggleConnectionFields();\n        });\n      });\n    }\n  };\n\n  /**\n   * Toggle unnecessary, unconnected optin fields if we're not showing the opt-in.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.toggleNoConnectionFields = function () {\n    if (app.cache.optinNoConn.checked) {\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'block';\n      });\n    } else {\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'none';\n      });\n    }\n  };\n\n  /**\n   *  Toggle unnecessary, *connected* optin fields if we're not showing the opt-in.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.toggleConnectionFields = function () {\n    // If checked, show them, else hide it.\n    if (0 < app.cache.list.length) {\n      Array.from(app.cache.title).forEach(function (item) {\n        item.style.display = 'block';\n      });\n      Array.from(app.cache.optin).forEach(function (item) {\n        item.style.display = 'block';\n      });\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'block';\n      });\n      //app.cache.instruct.slideDown();\n    } else {\n      Array.from(app.cache.title).forEach(function (item) {\n        item.style.display = 'none';\n      });\n      Array.from(app.cache.optin).forEach(function (item) {\n        item.style.display = 'none';\n      });\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'none';\n      });\n    }\n  };\n  app.init();\n})(window, window.CTCT_OptIns);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/optins.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/required-lists.js":
/*!*******************************************************!*\
  !*** ./assets/js/ctct-plugin-admin/required-lists.js ***!
  \*******************************************************/
/***/ (function() {

eval("window.CTCTRequiredLists = {};\n(function (window, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n    app.initialDisabledPublish();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.cache = function () {\n    app.cache = {\n      window: window,\n      publishButton: document.querySelector('#publish'),\n      status: window.ctct_admin_required_lists,\n      initialLists: document.querySelectorAll('#cmb2-metabox-ctct_0_list_metabox .attached-posts-wrap .retrieved li')\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.bindEvents = function () {\n    // Upon initial load of our builder page.\n    if (app.initialDisabledPublish()) {\n      app.cache.publishButton.setAttribute('disabled', 'disabled');\n    }\n    var pluses = document.querySelectorAll('.retrieved-wrap .add-remove');\n    if (pluses) {\n      Array.from(pluses).forEach(function (plus) {\n        plus.addEventListener('click', function (event) {\n          app.maybeEnablePublish();\n        });\n      });\n    }\n  };\n\n  /**\n   * Maybe disable the publish button initially.\n   *\n   * @returns {boolean}\n   */\n  app.initialDisabledPublish = function () {\n    var should_disable = false;\n    // We're not connected, so we do not risk losing anything.\n    if (!app.cache.status.is_connected) {\n      console.log('one');\n      return should_disable;\n    }\n    if (app.cache.status.current_form_email_disabled || app.cache.status.settings_email_disabled) {\n      console.log('two');\n      should_disable = true;\n    }\n    if (app.cache.initialLists.length === 0) {\n      console.log('three');\n      should_disable = true;\n    }\n    return should_disable;\n  };\n  app.maybeEnablePublish = function () {\n    //not finding correct amount on initial click\n    var newListCount = document.querySelectorAll('#cmb2-metabox-ctct_0_list_metabox .attached-posts-wrap .attached li');\n    console.log(newListCount);\n  };\n  app.init();\n\n  /**\n   * TODO: enable if \"Disable email notifications for this form?\" is clicked and result is NOT CHECKED.\n   * TODO: enable if \"Associated Lists\" is not empty.\n   */\n})(window, window.CTCTRequiredLists);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vcmVxdWlyZWQtbGlzdHMuanMiLCJuYW1lcyI6WyJ3aW5kb3ciLCJDVENUUmVxdWlyZWRMaXN0cyIsImFwcCIsImluaXQiLCJjYWNoZSIsImJpbmRFdmVudHMiLCJpbml0aWFsRGlzYWJsZWRQdWJsaXNoIiwicHVibGlzaEJ1dHRvbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInN0YXR1cyIsImN0Y3RfYWRtaW5fcmVxdWlyZWRfbGlzdHMiLCJpbml0aWFsTGlzdHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwic2V0QXR0cmlidXRlIiwicGx1c2VzIiwiQXJyYXkiLCJmcm9tIiwiZm9yRWFjaCIsInBsdXMiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZlbnQiLCJtYXliZUVuYWJsZVB1Ymxpc2giLCJzaG91bGRfZGlzYWJsZSIsImlzX2Nvbm5lY3RlZCIsImNvbnNvbGUiLCJsb2ciLCJjdXJyZW50X2Zvcm1fZW1haWxfZGlzYWJsZWQiLCJzZXR0aW5nc19lbWFpbF9kaXNhYmxlZCIsImxlbmd0aCIsIm5ld0xpc3RDb3VudCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uc3RhbnQtY29udGFjdC1mb3Jtcy8uL2Fzc2V0cy9qcy9jdGN0LXBsdWdpbi1hZG1pbi9yZXF1aXJlZC1saXN0cy5qcz9kNWFjIl0sInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5DVENUUmVxdWlyZWRMaXN0cyA9IHt9O1xuXG4oZnVuY3Rpb24gKHdpbmRvdywgYXBwKSB7XG5cblx0LyoqXG5cdCAqIEBjb25zdHJ1Y3RvclxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMC4wXG5cdCAqL1xuXHRhcHAuaW5pdCA9ICgpID0+IHtcblx0XHRhcHAuY2FjaGUoKTtcblx0XHRhcHAuYmluZEV2ZW50cygpO1xuXHRcdGFwcC5pbml0aWFsRGlzYWJsZWRQdWJsaXNoKCk7XG5cdH07XG5cblx0LyoqXG5cdCAqIENhY2hlIERPTSBlbGVtZW50cy5cblx0ICpcblx0ICogQGF1dGhvciBDb25zdGFudCBDb250YWN0XG5cdCAqIEBzaW5jZSAxLjExLjBcblx0ICovXG5cdGFwcC5jYWNoZSA9ICgpID0+IHtcblx0XHRhcHAuY2FjaGUgPSB7XG5cdFx0XHR3aW5kb3cgICAgICAgOiB3aW5kb3csXG5cdFx0XHRwdWJsaXNoQnV0dG9uOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcHVibGlzaCcpLFxuXHRcdFx0c3RhdHVzOiB3aW5kb3cuY3RjdF9hZG1pbl9yZXF1aXJlZF9saXN0cyxcblx0XHRcdGluaXRpYWxMaXN0czogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI2NtYjItbWV0YWJveC1jdGN0XzBfbGlzdF9tZXRhYm94IC5hdHRhY2hlZC1wb3N0cy13cmFwIC5yZXRyaWV2ZWQgbGknKVxuXHRcdH07XG5cdH07XG5cblx0LyoqXG5cdCAqIEF0dGFjaCBjYWxsYmFja3MgdG8gZXZlbnRzLlxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMTEuMFxuXHQgKi9cblx0YXBwLmJpbmRFdmVudHMgPSAoKSA9PiB7XG5cdFx0Ly8gVXBvbiBpbml0aWFsIGxvYWQgb2Ygb3VyIGJ1aWxkZXIgcGFnZS5cblx0XHRpZiAoYXBwLmluaXRpYWxEaXNhYmxlZFB1Ymxpc2goKSApIHtcblx0XHRcdGFwcC5jYWNoZS5wdWJsaXNoQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAnZGlzYWJsZWQnKTtcblx0XHR9XG5cblx0XHRsZXQgcGx1c2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnJldHJpZXZlZC13cmFwIC5hZGQtcmVtb3ZlJyk7XG5cdFx0aWYocGx1c2VzKXtcblx0XHRcdEFycmF5LmZyb20ocGx1c2VzKS5mb3JFYWNoKCAocGx1cykgPT4ge1xuXHRcdFx0XHRwbHVzLmFkZEV2ZW50TGlzdGVuZXIoICdjbGljaycsIChldmVudCkgPT4ge1xuXHRcdFx0XHRcdGFwcC5tYXliZUVuYWJsZVB1Ymxpc2goKTtcblx0XHRcdFx0fSk7XG5cdFx0XHR9KTtcblx0XHR9XG5cdH07XG5cblx0LyoqXG5cdCAqIE1heWJlIGRpc2FibGUgdGhlIHB1Ymxpc2ggYnV0dG9uIGluaXRpYWxseS5cblx0ICpcblx0ICogQHJldHVybnMge2Jvb2xlYW59XG5cdCAqL1xuXHRhcHAuaW5pdGlhbERpc2FibGVkUHVibGlzaCA9ICgpID0+IHtcblx0XHRsZXQgc2hvdWxkX2Rpc2FibGUgPSBmYWxzZTtcblx0XHQvLyBXZSdyZSBub3QgY29ubmVjdGVkLCBzbyB3ZSBkbyBub3QgcmlzayBsb3NpbmcgYW55dGhpbmcuXG5cdFx0aWYgKCFhcHAuY2FjaGUuc3RhdHVzLmlzX2Nvbm5lY3RlZCkgeyBjb25zb2xlLmxvZygnb25lJyk7XG5cdFx0XHRyZXR1cm4gc2hvdWxkX2Rpc2FibGU7XG5cdFx0fVxuXG5cdFx0aWYgKFxuXHRcdFx0YXBwLmNhY2hlLnN0YXR1cy5jdXJyZW50X2Zvcm1fZW1haWxfZGlzYWJsZWQgfHxcblx0XHRcdGFwcC5jYWNoZS5zdGF0dXMuc2V0dGluZ3NfZW1haWxfZGlzYWJsZWRcblx0XHQpIHtcblx0XHRcdGNvbnNvbGUubG9nKCd0d28nKTtcblx0XHRcdHNob3VsZF9kaXNhYmxlID0gdHJ1ZTtcblx0XHR9XG5cdFx0aWYgKFxuXHRcdFx0YXBwLmNhY2hlLmluaXRpYWxMaXN0cy5sZW5ndGggPT09IDBcblx0XHQpIHtcblx0XHRcdGNvbnNvbGUubG9nKCd0aHJlZScpO1xuXHRcdFx0c2hvdWxkX2Rpc2FibGUgPSB0cnVlO1xuXHRcdH1cblxuXHRcdHJldHVybiBzaG91bGRfZGlzYWJsZTtcblx0fVxuXG5cdGFwcC5tYXliZUVuYWJsZVB1Ymxpc2ggPSAoKSA9PiB7XG5cdFx0Ly9ub3QgZmluZGluZyBjb3JyZWN0IGFtb3VudCBvbiBpbml0aWFsIGNsaWNrXG5cdFx0bGV0IG5ld0xpc3RDb3VudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJyNjbWIyLW1ldGFib3gtY3RjdF8wX2xpc3RfbWV0YWJveCAuYXR0YWNoZWQtcG9zdHMtd3JhcCAuYXR0YWNoZWQgbGknKTtcblx0XHRjb25zb2xlLmxvZyhuZXdMaXN0Q291bnQpO1xuXHR9O1xuXG5cdGFwcC5pbml0KCk7XG5cblx0LyoqXG5cdCAqIFRPRE86IGVuYWJsZSBpZiBcIkRpc2FibGUgZW1haWwgbm90aWZpY2F0aW9ucyBmb3IgdGhpcyBmb3JtP1wiIGlzIGNsaWNrZWQgYW5kIHJlc3VsdCBpcyBOT1QgQ0hFQ0tFRC5cblx0ICogVE9ETzogZW5hYmxlIGlmIFwiQXNzb2NpYXRlZCBMaXN0c1wiIGlzIG5vdCBlbXB0eS5cblx0ICovXG5cbn0od2luZG93LCB3aW5kb3cuQ1RDVFJlcXVpcmVkTGlzdHMpKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0FBRTVCLFdBQVVELE1BQU0sRUFBRUUsR0FBRyxFQUFFO0VBRXZCO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNDQSxHQUFHLENBQUNDLElBQUksR0FBRyxZQUFNO0lBQ2hCRCxHQUFHLENBQUNFLEtBQUssQ0FBQyxDQUFDO0lBQ1hGLEdBQUcsQ0FBQ0csVUFBVSxDQUFDLENBQUM7SUFDaEJILEdBQUcsQ0FBQ0ksc0JBQXNCLENBQUMsQ0FBQztFQUM3QixDQUFDOztFQUVEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNDSixHQUFHLENBQUNFLEtBQUssR0FBRyxZQUFNO0lBQ2pCRixHQUFHLENBQUNFLEtBQUssR0FBRztNQUNYSixNQUFNLEVBQVNBLE1BQU07TUFDckJPLGFBQWEsRUFBRUMsUUFBUSxDQUFDQyxhQUFhLENBQUMsVUFBVSxDQUFDO01BQ2pEQyxNQUFNLEVBQUVWLE1BQU0sQ0FBQ1cseUJBQXlCO01BQ3hDQyxZQUFZLEVBQUVKLFFBQVEsQ0FBQ0ssZ0JBQWdCLENBQUMsc0VBQXNFO0lBQy9HLENBQUM7RUFDRixDQUFDOztFQUVEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNDWCxHQUFHLENBQUNHLFVBQVUsR0FBRyxZQUFNO0lBQ3RCO0lBQ0EsSUFBSUgsR0FBRyxDQUFDSSxzQkFBc0IsQ0FBQyxDQUFDLEVBQUc7TUFDbENKLEdBQUcsQ0FBQ0UsS0FBSyxDQUFDRyxhQUFhLENBQUNPLFlBQVksQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDO0lBQzdEO0lBRUEsSUFBSUMsTUFBTSxHQUFHUCxRQUFRLENBQUNLLGdCQUFnQixDQUFDLDZCQUE2QixDQUFDO0lBQ3JFLElBQUdFLE1BQU0sRUFBQztNQUNUQyxLQUFLLENBQUNDLElBQUksQ0FBQ0YsTUFBTSxDQUFDLENBQUNHLE9BQU8sQ0FBRSxVQUFDQyxJQUFJLEVBQUs7UUFDckNBLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUUsT0FBTyxFQUFFLFVBQUNDLEtBQUssRUFBSztVQUMxQ25CLEdBQUcsQ0FBQ29CLGtCQUFrQixDQUFDLENBQUM7UUFDekIsQ0FBQyxDQUFDO01BQ0gsQ0FBQyxDQUFDO0lBQ0g7RUFDRCxDQUFDOztFQUVEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7RUFDQ3BCLEdBQUcsQ0FBQ0ksc0JBQXNCLEdBQUcsWUFBTTtJQUNsQyxJQUFJaUIsY0FBYyxHQUFHLEtBQUs7SUFDMUI7SUFDQSxJQUFJLENBQUNyQixHQUFHLENBQUNFLEtBQUssQ0FBQ00sTUFBTSxDQUFDYyxZQUFZLEVBQUU7TUFBRUMsT0FBTyxDQUFDQyxHQUFHLENBQUMsS0FBSyxDQUFDO01BQ3ZELE9BQU9ILGNBQWM7SUFDdEI7SUFFQSxJQUNDckIsR0FBRyxDQUFDRSxLQUFLLENBQUNNLE1BQU0sQ0FBQ2lCLDJCQUEyQixJQUM1Q3pCLEdBQUcsQ0FBQ0UsS0FBSyxDQUFDTSxNQUFNLENBQUNrQix1QkFBdUIsRUFDdkM7TUFDREgsT0FBTyxDQUFDQyxHQUFHLENBQUMsS0FBSyxDQUFDO01BQ2xCSCxjQUFjLEdBQUcsSUFBSTtJQUN0QjtJQUNBLElBQ0NyQixHQUFHLENBQUNFLEtBQUssQ0FBQ1EsWUFBWSxDQUFDaUIsTUFBTSxLQUFLLENBQUMsRUFDbEM7TUFDREosT0FBTyxDQUFDQyxHQUFHLENBQUMsT0FBTyxDQUFDO01BQ3BCSCxjQUFjLEdBQUcsSUFBSTtJQUN0QjtJQUVBLE9BQU9BLGNBQWM7RUFDdEIsQ0FBQztFQUVEckIsR0FBRyxDQUFDb0Isa0JBQWtCLEdBQUcsWUFBTTtJQUM5QjtJQUNBLElBQUlRLFlBQVksR0FBR3RCLFFBQVEsQ0FBQ0ssZ0JBQWdCLENBQUMscUVBQXFFLENBQUM7SUFDbkhZLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSSxZQUFZLENBQUM7RUFDMUIsQ0FBQztFQUVENUIsR0FBRyxDQUFDQyxJQUFJLENBQUMsQ0FBQzs7RUFFVjtBQUNEO0FBQ0E7QUFDQTtBQUVBLENBQUMsRUFBQ0gsTUFBTSxFQUFFQSxNQUFNLENBQUNDLGlCQUFpQixDQUFDIiwiaWdub3JlTGlzdCI6W119\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/required-lists.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/js/ctct-plugin-admin/index.js");
/******/ 	
/******/ })()
;