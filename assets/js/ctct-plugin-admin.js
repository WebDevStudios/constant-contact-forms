/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/ctct-plugin-admin/ajax.js":
/*!*********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/ajax.js ***!
  \*********************************************/
/***/ (function() {

eval("window.CTCTAJAX = {};\n(function (window, that) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.init = function () {\n    // Trigger any field modifications we need to do.\n    that.handleReviewAJAX();\n  };\n\n  // Handle saving the decision regarding the review prompt admin notice.\n  that.handleReviewAJAX = function () {\n    var reviewRequest = document.querySelector('#ctct-admin-notice-review_request');\n    if (reviewRequest) {\n      reviewRequest.addEventListener('click', function (e) {\n        e.preventDefault();\n        var ctctAction;\n        if (e.target.matches('.ctct-notice-dismiss')) {\n          ctctAction = 'dismissed';\n        } else if (e.target.matches('.ctct-review')) {\n          ctctAction = 'reviewed';\n        }\n        var data = new FormData();\n        data.append('action', 'constant_contact_review_ajax_handler');\n        data.append('ctct_review_action', ctctAction);\n        fetch(window.ajaxurl, options = {\n          method: 'POST',\n          body: data\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          if (response.success) {\n            reviewRequest.style.display = 'none';\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      });\n    }\n  };\n  that.init();\n})(window, window.CTCTAJAX);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vYWpheC5qcyIsIm5hbWVzIjpbIndpbmRvdyIsIkNUQ1RBSkFYIiwidGhhdCIsImluaXQiLCJoYW5kbGVSZXZpZXdBSkFYIiwicmV2aWV3UmVxdWVzdCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJjdGN0QWN0aW9uIiwidGFyZ2V0IiwibWF0Y2hlcyIsImRhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImZldGNoIiwiYWpheHVybCIsIm9wdGlvbnMiLCJtZXRob2QiLCJib2R5IiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInN1Y2Nlc3MiLCJzdHlsZSIsImRpc3BsYXkiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY29uc3RhbnQtY29udGFjdC1mb3Jtcy8uL2Fzc2V0cy9qcy9jdGN0LXBsdWdpbi1hZG1pbi9hamF4LmpzPzhlOTQiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LkNUQ1RBSkFYID0ge307XG5cbiggZnVuY3Rpb24oIHdpbmRvdywgdGhhdCApIHtcblxuXHQvKipcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqXG5cdCAqIEBhdXRob3IgQ29uc3RhbnQgQ29udGFjdFxuXHQgKiBAc2luY2UgMS4wLjBcblx0ICovXG5cdHRoYXQuaW5pdCA9ICgpID0+IHtcblxuXHRcdC8vIFRyaWdnZXIgYW55IGZpZWxkIG1vZGlmaWNhdGlvbnMgd2UgbmVlZCB0byBkby5cblx0XHR0aGF0LmhhbmRsZVJldmlld0FKQVgoKTtcblx0fTtcblxuXHQvLyBIYW5kbGUgc2F2aW5nIHRoZSBkZWNpc2lvbiByZWdhcmRpbmcgdGhlIHJldmlldyBwcm9tcHQgYWRtaW4gbm90aWNlLlxuXHR0aGF0LmhhbmRsZVJldmlld0FKQVggPSAoKSA9PiB7XG5cdFx0bGV0IHJldmlld1JlcXVlc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY3RjdC1hZG1pbi1ub3RpY2UtcmV2aWV3X3JlcXVlc3QnKTtcblx0XHRpZiAocmV2aWV3UmVxdWVzdCkge1xuXHRcdFx0cmV2aWV3UmVxdWVzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG5cdFx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0bGV0IGN0Y3RBY3Rpb247XG5cdFx0XHRcdGlmIChlLnRhcmdldC5tYXRjaGVzKCcuY3RjdC1ub3RpY2UtZGlzbWlzcycpKSB7XG5cdFx0XHRcdFx0Y3RjdEFjdGlvbiA9ICdkaXNtaXNzZWQnO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGUudGFyZ2V0Lm1hdGNoZXMoJy5jdGN0LXJldmlldycpKSB7XG5cdFx0XHRcdFx0Y3RjdEFjdGlvbiA9ICdyZXZpZXdlZCc7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjb25zdCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG5cdFx0XHRcdGRhdGEuYXBwZW5kKCdhY3Rpb24nLCAnY29uc3RhbnRfY29udGFjdF9yZXZpZXdfYWpheF9oYW5kbGVyJyk7XG5cdFx0XHRcdGRhdGEuYXBwZW5kKCdjdGN0X3Jldmlld19hY3Rpb24nLCBjdGN0QWN0aW9uKTtcblxuXHRcdFx0XHRmZXRjaCh3aW5kb3cuYWpheHVybCwgb3B0aW9ucyA9IHtcblx0XHRcdFx0XHRtZXRob2Q6ICdQT1NUJywgYm9keTogZGF0YSxcblx0XHRcdFx0fSlcblx0XHRcdFx0XHQudGhlbigocmVzcG9uc2UpID0+IHJlc3BvbnNlLmpzb24oKSlcblx0XHRcdFx0XHQudGhlbigocmVzcG9uc2UpID0+IHtcblx0XHRcdFx0XHRcdGlmIChyZXNwb25zZS5zdWNjZXNzKSB7XG5cdFx0XHRcdFx0XHRcdHJldmlld1JlcXVlc3Quc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KS5jYXRjaCgoZXJyb3IpID0+IHtcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhlcnJvcik7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9O1xuXG5cdHRoYXQuaW5pdCgpO1xufSAoIHdpbmRvdywgd2luZG93LkNUQ1RBSkFYICkgKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsUUFBUSxHQUFHLENBQUMsQ0FBQztBQUVsQixXQUFVRCxNQUFNLEVBQUVFLElBQUksRUFBRztFQUUxQjtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDQ0EsSUFBSSxDQUFDQyxJQUFJLEdBQUcsWUFBTTtJQUVqQjtJQUNBRCxJQUFJLENBQUNFLGdCQUFnQixDQUFDLENBQUM7RUFDeEIsQ0FBQzs7RUFFRDtFQUNBRixJQUFJLENBQUNFLGdCQUFnQixHQUFHLFlBQU07SUFDN0IsSUFBSUMsYUFBYSxHQUFHQyxRQUFRLENBQUNDLGFBQWEsQ0FBQyxtQ0FBbUMsQ0FBQztJQUMvRSxJQUFJRixhQUFhLEVBQUU7TUFDbEJBLGFBQWEsQ0FBQ0csZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQUNDLENBQUMsRUFBSztRQUM5Q0EsQ0FBQyxDQUFDQyxjQUFjLENBQUMsQ0FBQztRQUNsQixJQUFJQyxVQUFVO1FBQ2QsSUFBSUYsQ0FBQyxDQUFDRyxNQUFNLENBQUNDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFO1VBQzdDRixVQUFVLEdBQUcsV0FBVztRQUN6QixDQUFDLE1BQU0sSUFBSUYsQ0FBQyxDQUFDRyxNQUFNLENBQUNDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRTtVQUM1Q0YsVUFBVSxHQUFHLFVBQVU7UUFDeEI7UUFFQSxJQUFNRyxJQUFJLEdBQUcsSUFBSUMsUUFBUSxDQUFDLENBQUM7UUFDM0JELElBQUksQ0FBQ0UsTUFBTSxDQUFDLFFBQVEsRUFBRSxzQ0FBc0MsQ0FBQztRQUM3REYsSUFBSSxDQUFDRSxNQUFNLENBQUMsb0JBQW9CLEVBQUVMLFVBQVUsQ0FBQztRQUU3Q00sS0FBSyxDQUFDakIsTUFBTSxDQUFDa0IsT0FBTyxFQUFFQyxPQUFPLEdBQUc7VUFDL0JDLE1BQU0sRUFBRSxNQUFNO1VBQUVDLElBQUksRUFBRVA7UUFDdkIsQ0FBQyxDQUFDLENBQ0FRLElBQUksQ0FBQyxVQUFDQyxRQUFRO1VBQUEsT0FBS0EsUUFBUSxDQUFDQyxJQUFJLENBQUMsQ0FBQztRQUFBLEVBQUMsQ0FDbkNGLElBQUksQ0FBQyxVQUFDQyxRQUFRLEVBQUs7VUFDbkIsSUFBSUEsUUFBUSxDQUFDRSxPQUFPLEVBQUU7WUFDckJwQixhQUFhLENBQUNxQixLQUFLLENBQUNDLE9BQU8sR0FBRyxNQUFNO1VBQ3JDO1FBQ0QsQ0FBQyxDQUFDLENBQUNDLEtBQUssQ0FBQyxVQUFDQyxLQUFLLEVBQUs7VUFDcEJDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixLQUFLLENBQUM7UUFDbkIsQ0FBQyxDQUFDO01BQ0gsQ0FBQyxDQUFDO0lBQ0g7RUFDRCxDQUFDO0VBRUQzQixJQUFJLENBQUNDLElBQUksQ0FBQyxDQUFDO0FBQ1osQ0FBQyxFQUFHSCxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0MsUUFBUyxDQUFDIiwiaWdub3JlTGlzdCI6W119\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/ajax.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/builder.js":
/*!************************************************!*\
  !*** ./assets/js/ctct-plugin-admin/builder.js ***!
  \************************************************/
/***/ (function() {

eval("function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nwindow.CTCTBuilder = {};\n(function (window, $, that) {\n  var required_items;\n\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.init = function () {\n    // If we do actually have an email field set, then remove our error.\n    var emailField = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox option[value=\"email\"]');\n    if (emailField.length) {\n      var noEmailError = document.querySelector('#ctct-no-email-error');\n      if (noEmailError) {\n        noEmailError.style.display = 'none';\n      }\n    }\n\n    // Cache it all.\n    that.cache();\n\n    // Bind our events.\n    that.bindEvents();\n\n    // Bind our select dropdown events.\n    that.selectBinds();\n\n    // Trigger any field modifications we need to do.\n    that.modifyFields();\n\n    // Make description non-draggable, so we don't run into weird cmb2 issues.\n    var cmb2handle = document.querySelectorAll('#ctct_0_description_metabox h2.hndle');\n    if (cmb2handle) {\n      Array.from(cmb2handle).forEach(function (hndle) {\n        hndle.classList.remove('ui-sortable-handle', 'hndle');\n      });\n    }\n\n    // Inject our new labels for the up/down CMB2 buttons, so they can be properly localized.\n    // Because we're using :after, we can't use .css() to do this, we need to inject a style tag.\n    var headTag = document.querySelector('head');\n    var styleTag = document.createElement('style');\n    styleTag.textContent = \"#cmb2-metabox-ctct_2_fields_metabox a.move-up::after { content: \\\"\" + window.ctctTexts.move_up + \"\\\" }\";\n    styleTag.textContent += \"#cmb2-metabox-ctct_2_fields_metabox a.move-down::after { content: \\\"\" + window.ctctTexts.move_down + \"\\\" }\";\n    headTag.appendChild(styleTag);\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.cache = function () {\n    that.cache = {\n      window: window,\n      body: document.querySelector('body')\n    };\n    that.isLeaveWarningBound = false;\n  };\n\n  // Triggers our leave warning if we modify things in the form.\n  that.bindLeaveWarning = function () {\n    // Don't double-bind it.\n    if (!that.isLeaveWarningBound) {\n      // Bind our error that displays before leaving page.\n      that.cache.window.addEventListener('beforeunload', that.bindMessage);\n\n      // Save our state.\n      that.isLeaveWarningBound = true;\n    }\n  };\n\n  /**\n   * Removes our binding of our leave warning.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.unbindLeaveWarning = function () {\n    that.cache.window.removeEventListener('beforeunload', that.bindMessage);\n  };\n\n  /**\n   * Handles the beforeunload callback and display.\n   *\n   * @param e beforeunload event.\n   * @since NEXT\n   */\n  that.bindMessage = function (e) {\n    e.preventDefault();\n    e.returnValue = '';\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.bindEvents = function () {\n    var submitted = document.querySelector('#post');\n    if (submitted) {\n      document.addEventListener('submit', function () {\n        var disabledEmails = document.querySelectorAll('.ctct-email-disabled');\n        if (disabledEmails) {\n          Array.from(disabledEmails).forEach(function (item) {\n            item.classList.remove('disabled');\n            item.removeAttribute('disabled');\n          });\n        }\n        that.unbindLeaveWarning();\n      });\n    }\n    var cmb2inputs = document.querySelectorAll('.cmb2-wrap input, .cmb2-wrap textarea');\n    Array.from(cmb2inputs).forEach(function (input_item) {\n      input_item.addEventListener('input', function () {\n        if ('undefined' !== typeof tinyMCE) {\n          that.bindLeaveWarning();\n        }\n      });\n    });\n\n    // Disable email options on row change trigger.\n    // `cmb2_shift_rows_complete` is a custom jQuery based event, so we are leaving this selector.\n    $(document).on('cmb2_shift_rows_complete', function () {\n      that.modifyFields();\n      that.bindLeaveWarning();\n      that.removeDuplicateMappings();\n    });\n\n    // If we get a row added, then do our stuff.\n    // `cmb2_add_row` is a custom jQuery based event, so we are leaving this selector.\n    $(document).on('cmb2_add_row', function (newRow) {\n      // eslint-disable-line no-unused-vars\n      var groupPostBoxes = document.querySelectorAll('#custom_fields_group_repeat .postbox');\n      if (groupPostBoxes) {\n        var lastBox = _toConsumableArray(groupPostBoxes).pop();\n        var boxSelect = lastBox.querySelector('.map select');\n        if (boxSelect) {\n          boxSelect.value = 'none';\n        }\n      }\n      that.modifyFields();\n      that.selectBinds();\n      that.removeDuplicateMappings();\n    });\n    that.removeDuplicateMappings();\n    var cssReset = document.querySelector('#ctct-reset-css');\n    if (cssReset) {\n      cssReset.addEventListener('click', function (e) {\n        e.preventDefault();\n        var selectFields = ['#_ctct_form_description_font_size', '#_ctct_form_submit_button_font_size', '#_ctct_form_label_placement'];\n        selectFields.forEach(function (fieldSelector) {\n          var field = document.querySelector(fieldSelector);\n          if (field) {\n            field.selectedIndex = 0;\n          }\n        });\n        var textFields = ['#_ctct_form_padding_top', '#_ctct_form_padding_bottom', '#_ctct_form_padding_left', '#_ctct_form_padding_right', '#_ctct_input_custom_classes'];\n        textFields.forEach(function (textSelector) {\n          var text = document.querySelector(textSelector);\n          if (text) {\n            text.value = '';\n          }\n        });\n\n        // Clear out color pickers.\n        var pickerClears = document.querySelectorAll('.wp-picker-clear');\n        if (pickerClears) {\n          Array.from(pickerClears).forEach(function (picker) {\n            picker.click();\n          });\n        }\n      });\n    }\n    window.addEventListener('load', function () {\n      var addressBox = document.querySelector('#address_settings');\n      if (addressBox) {\n        var includeItems = addressBox.querySelectorAll('.cmb2-id--ctct-address-fields-include input[type=\"checkbox\"]');\n        var checkedItems = addressBox.querySelectorAll('.cmb2-id--ctct-address-fields-include input[type=\"checkbox\"]:checked');\n        required_items = addressBox.querySelectorAll('.cmb2-id--ctct-address-fields-require input[type=\"checkbox\"]');\n        if (checkedItems.length === 0) {\n          Array.from(required_items).forEach(function (item) {\n            item.setAttribute('disabled', true);\n          });\n        }\n        Array.from(includeItems).forEach(function (item) {\n          item.addEventListener('change', that.addressChange);\n        });\n      }\n    });\n  };\n\n  /**\n   * Handle the enabled/disabled state of rwquired items when address \"include\" options change.\n   *\n   * @param e Checkbox being checked.\n   */\n  that.addressChange = function (e) {\n    var item = e.target;\n    if (item.checked) {\n      Array.from(required_items).forEach(function (required_item) {\n        if (item.value === required_item.value) {\n          required_item.removeAttribute('disabled');\n        }\n      });\n    } else {\n      Array.from(required_items).forEach(function (required_item) {\n        if (item.value === required_item.value) {\n          required_item.checked = false;\n          required_item.setAttribute('disabled', true);\n        }\n      });\n    }\n  };\n\n  /**\n   * When .cmb2_select <selects> get changed, do some actions.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.selectBinds = function () {\n    // For each fields select.\n    var selects = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox .cmb2_select');\n    if (selects) {\n      Array.from(selects).forEach(function (select) {\n        select.addEventListener('change', function () {\n          // Modify our fields.\n          that.modifyFields();\n\n          // Don't allow duplicate mappings in form.\n          that.removeDuplicateMappings();\n\n          // Bind our leave warning.\n          that.bindLeaveWarning();\n          var customField = document.querySelectorAll('.form-field-is-custom-field');\n          if (customField) {\n            Array.from(customField).forEach(function (field) {\n              field.addEventListener('keyup', that.noUniqueWarning);\n            });\n          }\n        });\n      });\n    }\n  };\n\n  /**\n   * Validates whether or not all of our custom field labels all have unique labels.\n   */\n  that.validateUniqueFieldLabels = function () {\n    var cfValuesOrig = document.querySelectorAll('.form-field-is-custom-field');\n    var cfValues;\n    if (cfValuesOrig) {\n      cfValues = Array.from(cfValuesOrig).map(function (item) {\n        return item.value;\n      });\n    }\n    var cfValuesTotal = cfValues.length;\n    var cfValuesFiltered = cfValues.filter(function (item, position) {\n      return cfValues.indexOf(item) === position;\n    });\n    var cfValuesFilteredTotal = cfValuesFiltered.length;\n    return cfValuesTotal === cfValuesFilteredTotal;\n  };\n\n  /**\n   * Toggle inline warning that a given custom field label is not a unique value.\n   * @param event\n   */\n  that.noUniqueWarning = function (event) {\n    var ctctCustomField = event.currentTarget;\n    var siblings = _toConsumableArray(ctctCustomField.parentElement.children);\n    if (siblings.length === 0) {\n      return;\n    }\n    if (that.validateUniqueFieldLabels()) {\n      siblings.forEach(function (sibling) {\n        if (sibling.classList.contains('ctct-warning')) {\n          sibling.classList.remove('ctct-warning-no-unqiue');\n        }\n      });\n    } else {\n      siblings.forEach(function (sibling) {\n        if (sibling.classList.contains('ctct-warning')) {\n          sibling.classList.add('ctct-warning-no-unqiue');\n        }\n      });\n    }\n  };\n\n  /**\n   * We need to manipulate our form builder a bit. We do this here.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.modifyFields = function () {\n    // Set that we haven't found an email.\n    var foundEmail = false;\n    var cfnumber = 1;\n    var fieldgroups = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox #custom_fields_group_repeat .cmb-repeatable-grouping');\n    if (fieldgroups) {\n      Array.from(fieldgroups).forEach(function (field, key) {\n        var fieldList = field.querySelector('.cmb-field-list');\n        var removeButton = fieldList.querySelector('.cmb-remove-group-row');\n        var requiredToggle = fieldList.querySelector('.required input[type=checkbox]');\n        var requiredRow = requiredToggle.closest('.cmb-row');\n        var map = fieldList.querySelector('.map select option:checked');\n        var mapName = '';\n        if (map && map.text) {\n          mapName = map.text;\n        }\n        var fieldTitle = field.querySelector('h3');\n        var fieldLabel = field.querySelector('input[name*=\"_ctct_field_label\"]');\n        var fieldDesc = field.querySelector('input[name*=\"_ctct_field_desc\"]');\n        if (mapName === 'Custom Text Field') {\n          mapName += ' ' + cfnumber.toString();\n          cfnumber++;\n        }\n\n        // Set our field row to be the name of the selected option.\n        fieldTitle.innerText = mapName;\n        // If we have a blank field label, then use the name of the field to fill it in.\n        if (mapName && 0 === fieldLabel.value.length) {\n          fieldLabel.value = mapName;\n        }\n        fieldLabel.classList.add('ctct-label-filled');\n        var fieldDropdown = field.querySelector('select');\n        // If we haven't yet found an email field, and this is our email field.\n        if (!foundEmail && map !== null) {\n          if ('email' === map.value) {\n            // Set that we found an email field.\n            foundEmail = true;\n\n            // Make it required.\n            requiredToggle.checked = true;\n            if (fieldDropdown) {\n              fieldDropdown.classList.add('disabled', 'ctct-email-disabled');\n              fieldDropdown.disabled = true;\n            }\n            requiredRow.style.display = 'none';\n            removeButton.style.display = 'none';\n          }\n        } else {\n          if (fieldDropdown) {\n            fieldDropdown.classList.remove('disabled', 'ctct-email-disabled');\n            fieldDropdown.disabled = false;\n          }\n          requiredRow.style.display = 'block';\n          removeButton.style.display = 'block';\n          if (map !== null) {\n            if ('custom' === map.value) {\n              fieldLabel.classList.add('form-field-is-custom-field');\n            } else {\n              fieldLabel.classList.remove('form-field-is-custom-field');\n            }\n          }\n        }\n        if (window.ctct_admin_placeholders) {\n          var placeholder = window.ctct_admin_placeholders[fieldDropdown.value];\n          if (placeholder && placeholder.length && fieldDesc) {\n            fieldDesc.setAttribute('placeholder', 'Example: ' + placeholder);\n          } else if (window.ctct_admin_placeholders.default) {\n            fieldDesc.setAttribute('placeholder', window.ctct_admin_placeholders.default);\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * Go through all dropdowns, and remove used options.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.removeDuplicateMappings = function () {\n    var usedMappings = [];\n    var dropdowns = document.querySelectorAll('#cmb2-metabox-ctct_2_fields_metabox #custom_fields_group_repeat .cmb-repeatable-grouping select');\n\n    // For each dropdown, build up our array of used values.\n    Array.from(dropdowns).forEach(function (dropdown, index) {\n      usedMappings.push(dropdown.value);\n\n      // Re-show all the children options we may have hidden.\n      Array.from(dropdown.options).forEach(function (item) {\n        item.style.display = 'inline';\n      });\n    });\n    usedMappings.forEach(function (mapping) {\n      // But only do it if the value isn't one of our custom ones.\n      if ('custom' === mapping || 'custom_text_area' === mapping) {\n        return;\n      }\n\n      // Remove all options from our dropdowns with the value.\n      Array.from(dropdowns).forEach(function (dropdown) {\n        Array.from(dropdown.options).forEach(function (item) {\n          if (item.value === mapping && item.selected !== true) {\n            item.style.display = 'none';\n          }\n        });\n      });\n    });\n  };\n  that.init();\n})(window, jQuery, window.CTCTBuilder);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/builder.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/clipboard.js":
/*!**************************************************!*\
  !*** ./assets/js/ctct-plugin-admin/clipboard.js ***!
  \**************************************************/
/***/ (function() {

eval("window.CTCTClipboard = {};\n(function (window, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.cache = function () {\n    app.cache = {\n      window: window,\n      copyshortcode: document.querySelectorAll('.ctct-shortcode-wrap')\n    };\n  };\n\n  /**\n   * Copy to clipboard click event.\n   *\n   * @param {object} button The clicked element.\n   * @param {HTMLElement} input The input element.\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.copyClick = function (button, input) {\n    if (!button || !input) {\n      return;\n    }\n\n    // Select the input.\n    input.select();\n    input.setSelectionRange(0, 99999); // For mobile devices.\n\n    // Copy the text inside the text field.\n    document.execCommand(\"copy\");\n    var reset = button.innerHTML;\n    button.innerHTML = button.dataset.copied;\n\n    // Reset button text.\n    setTimeout(function () {\n      button.innerHTML = reset;\n    }, 3000);\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.11.0\n   */\n  app.bindEvents = function () {\n    // Add click event for copy buttons.\n    if (app.cache.copyshortcode) {\n      Array.from(app.cache.copyshortcode).forEach(function (element) {\n        var input = element.querySelector('input');\n        var button = element.querySelector('button');\n        if (input && button) {\n          button.addEventListener('click', function (e) {\n            e.preventDefault();\n            app.copyClick(this, input);\n          });\n        }\n      });\n    }\n  };\n  app.init();\n})(window, window.CTCTClipboard);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vY2xpcGJvYXJkLmpzIiwibmFtZXMiOlsid2luZG93IiwiQ1RDVENsaXBib2FyZCIsImFwcCIsImluaXQiLCJjYWNoZSIsImJpbmRFdmVudHMiLCJjb3B5c2hvcnRjb2RlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY29weUNsaWNrIiwiYnV0dG9uIiwiaW5wdXQiLCJzZWxlY3QiLCJzZXRTZWxlY3Rpb25SYW5nZSIsImV4ZWNDb21tYW5kIiwicmVzZXQiLCJpbm5lckhUTUwiLCJkYXRhc2V0IiwiY29waWVkIiwic2V0VGltZW91dCIsIkFycmF5IiwiZnJvbSIsImZvckVhY2giLCJlbGVtZW50IiwicXVlcnlTZWxlY3RvciIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicHJldmVudERlZmF1bHQiXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnN0YW50LWNvbnRhY3QtZm9ybXMvLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vY2xpcGJvYXJkLmpzP2MwM2MiXSwic291cmNlc0NvbnRlbnQiOlsid2luZG93LkNUQ1RDbGlwYm9hcmQgPSB7fTtcblxuKCBmdW5jdGlvbiggd2luZG93LCBhcHAgKSB7XG5cblx0LyoqXG5cdCAqIEBjb25zdHJ1Y3RvclxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMC4wXG5cdCAqL1xuXHQgYXBwLmluaXQgPSAoKSA9PiB7XG5cdFx0YXBwLmNhY2hlKCk7XG5cdFx0YXBwLmJpbmRFdmVudHMoKTtcblx0fTtcblxuXHQvKipcblx0ICogQ2FjaGUgRE9NIGVsZW1lbnRzLlxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMTEuMFxuXHQgKi9cblx0IGFwcC5jYWNoZSA9ICgpID0+IHtcblx0XHRhcHAuY2FjaGUgPSB7XG5cdFx0XHR3aW5kb3c6IHdpbmRvdyxcblx0XHRcdGNvcHlzaG9ydGNvZGU6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jdGN0LXNob3J0Y29kZS13cmFwJyApLFxuXHRcdH07XG5cdH07XG5cblx0LyoqXG5cdCAqIENvcHkgdG8gY2xpcGJvYXJkIGNsaWNrIGV2ZW50LlxuXHQgKlxuXHQgKiBAcGFyYW0ge29iamVjdH0gYnV0dG9uIFRoZSBjbGlja2VkIGVsZW1lbnQuXG5cdCAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGlucHV0IFRoZSBpbnB1dCBlbGVtZW50LlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMTEuMFxuXHQgKi9cblx0YXBwLmNvcHlDbGljayA9IChidXR0b24sIGlucHV0KSA9PiB7XG5cblx0XHRpZiAoIWJ1dHRvbiB8fCAhaW5wdXQpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBTZWxlY3QgdGhlIGlucHV0LlxuXHRcdGlucHV0LnNlbGVjdCgpO1xuXHRcdGlucHV0LnNldFNlbGVjdGlvblJhbmdlKDAsIDk5OTk5KTsgLy8gRm9yIG1vYmlsZSBkZXZpY2VzLlxuXG5cdFx0Ly8gQ29weSB0aGUgdGV4dCBpbnNpZGUgdGhlIHRleHQgZmllbGQuXG5cdFx0ZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJjb3B5XCIpO1xuXHRcdGxldCByZXNldCA9IGJ1dHRvbi5pbm5lckhUTUw7XG5cdFx0YnV0dG9uLmlubmVySFRNTCA9IGJ1dHRvbi5kYXRhc2V0LmNvcGllZDtcblxuXHRcdC8vIFJlc2V0IGJ1dHRvbiB0ZXh0LlxuXHRcdHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcblx0XHRcdGJ1dHRvbi5pbm5lckhUTUwgPSByZXNldDtcblx0XHR9LCAzMDAwKTtcblxuXHR9XG5cblx0LyoqXG5cdCAqIEF0dGFjaCBjYWxsYmFja3MgdG8gZXZlbnRzLlxuXHQgKlxuXHQgKiBAYXV0aG9yIENvbnN0YW50IENvbnRhY3Rcblx0ICogQHNpbmNlIDEuMTEuMFxuXHQgKi9cblx0IGFwcC5iaW5kRXZlbnRzID0gKCkgPT4ge1xuXG5cdFx0Ly8gQWRkIGNsaWNrIGV2ZW50IGZvciBjb3B5IGJ1dHRvbnMuXG5cdFx0IGlmIChhcHAuY2FjaGUuY29weXNob3J0Y29kZSkge1xuXHRcdFx0IEFycmF5LmZyb20oYXBwLmNhY2hlLmNvcHlzaG9ydGNvZGUpLmZvckVhY2goKGVsZW1lbnQpID0+IHtcblx0XHRcdFx0IGxldCBpbnB1dCA9IGVsZW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcblx0XHRcdFx0IGxldCBidXR0b24gPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2J1dHRvbicpO1xuXG5cdFx0XHRcdCBpZiAoaW5wdXQgJiYgYnV0dG9uKSB7XG5cdFx0XHRcdFx0IGJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdFx0XHQgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0IGFwcC5jb3B5Q2xpY2sodGhpcywgaW5wdXQpO1xuXHRcdFx0XHRcdCB9KTtcblx0XHRcdFx0IH1cblx0XHRcdCB9KTtcblx0XHQgfVxuXHR9O1xuXG5cdGFwcC5pbml0KCk7XG5cbn0gKCB3aW5kb3csIHdpbmRvdy5DVENUQ2xpcGJvYXJkICkgKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE1BQU0sQ0FBQ0MsYUFBYSxHQUFHLENBQUMsQ0FBQztBQUV2QixXQUFVRCxNQUFNLEVBQUVFLEdBQUcsRUFBRztFQUV6QjtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDRUEsR0FBRyxDQUFDQyxJQUFJLEdBQUcsWUFBTTtJQUNqQkQsR0FBRyxDQUFDRSxLQUFLLENBQUMsQ0FBQztJQUNYRixHQUFHLENBQUNHLFVBQVUsQ0FBQyxDQUFDO0VBQ2pCLENBQUM7O0VBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0VILEdBQUcsQ0FBQ0UsS0FBSyxHQUFHLFlBQU07SUFDbEJGLEdBQUcsQ0FBQ0UsS0FBSyxHQUFHO01BQ1hKLE1BQU0sRUFBRUEsTUFBTTtNQUNkTSxhQUFhLEVBQUVDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsc0JBQXVCO0lBQ2pFLENBQUM7RUFDRixDQUFDOztFQUVEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDQ04sR0FBRyxDQUFDTyxTQUFTLEdBQUcsVUFBQ0MsTUFBTSxFQUFFQyxLQUFLLEVBQUs7SUFFbEMsSUFBSSxDQUFDRCxNQUFNLElBQUksQ0FBQ0MsS0FBSyxFQUFFO01BQ3RCO0lBQ0Q7O0lBRUE7SUFDQUEsS0FBSyxDQUFDQyxNQUFNLENBQUMsQ0FBQztJQUNkRCxLQUFLLENBQUNFLGlCQUFpQixDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDOztJQUVuQztJQUNBTixRQUFRLENBQUNPLFdBQVcsQ0FBQyxNQUFNLENBQUM7SUFDNUIsSUFBSUMsS0FBSyxHQUFHTCxNQUFNLENBQUNNLFNBQVM7SUFDNUJOLE1BQU0sQ0FBQ00sU0FBUyxHQUFHTixNQUFNLENBQUNPLE9BQU8sQ0FBQ0MsTUFBTTs7SUFFeEM7SUFDQUMsVUFBVSxDQUFDLFlBQVU7TUFDcEJULE1BQU0sQ0FBQ00sU0FBUyxHQUFHRCxLQUFLO0lBQ3pCLENBQUMsRUFBRSxJQUFJLENBQUM7RUFFVCxDQUFDOztFQUVEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNFYixHQUFHLENBQUNHLFVBQVUsR0FBRyxZQUFNO0lBRXZCO0lBQ0MsSUFBSUgsR0FBRyxDQUFDRSxLQUFLLENBQUNFLGFBQWEsRUFBRTtNQUM1QmMsS0FBSyxDQUFDQyxJQUFJLENBQUNuQixHQUFHLENBQUNFLEtBQUssQ0FBQ0UsYUFBYSxDQUFDLENBQUNnQixPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFLO1FBQ3hELElBQUlaLEtBQUssR0FBR1ksT0FBTyxDQUFDQyxhQUFhLENBQUMsT0FBTyxDQUFDO1FBQzFDLElBQUlkLE1BQU0sR0FBR2EsT0FBTyxDQUFDQyxhQUFhLENBQUMsUUFBUSxDQUFDO1FBRTVDLElBQUliLEtBQUssSUFBSUQsTUFBTSxFQUFFO1VBQ3BCQSxNQUFNLENBQUNlLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFVQyxDQUFDLEVBQUU7WUFDN0NBLENBQUMsQ0FBQ0MsY0FBYyxDQUFDLENBQUM7WUFDbEJ6QixHQUFHLENBQUNPLFNBQVMsQ0FBQyxJQUFJLEVBQUVFLEtBQUssQ0FBQztVQUMzQixDQUFDLENBQUM7UUFDSDtNQUNELENBQUMsQ0FBQztJQUNIO0VBQ0YsQ0FBQztFQUVEVCxHQUFHLENBQUNDLElBQUksQ0FBQyxDQUFDO0FBRVgsQ0FBQyxFQUFHSCxNQUFNLEVBQUVBLE1BQU0sQ0FBQ0MsYUFBYyxDQUFDIiwiaWdub3JlTGlzdCI6W119\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/clipboard.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/forms.js":
/*!**********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/forms.js ***!
  \**********************************************/
/***/ (function() {

eval("window.CTCTForms = {};\n(function (window, that) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.init = function () {\n    that.cache();\n    that.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.cache = function () {\n    that.cache = {\n      window: window,\n      disconnect: '.ctct-disconnect'\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  that.bindEvents = function () {\n    var disconnect = document.querySelectorAll(that.cache.disconnect);\n    if (disconnect) {\n      Array.from(disconnect).forEach(function (item) {\n        item.addEventListener('click', function () {\n          return confirm(window.ctctTexts.disconnectconfirm);\n        });\n      });\n    }\n  };\n  that.init();\n})(window, window.CTCTForms);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vZm9ybXMuanMiLCJuYW1lcyI6WyJ3aW5kb3ciLCJDVENURm9ybXMiLCJ0aGF0IiwiaW5pdCIsImNhY2hlIiwiYmluZEV2ZW50cyIsImRpc2Nvbm5lY3QiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJBcnJheSIsImZyb20iLCJmb3JFYWNoIiwiaXRlbSIsImFkZEV2ZW50TGlzdGVuZXIiLCJjb25maXJtIiwiY3RjdFRleHRzIiwiZGlzY29ubmVjdGNvbmZpcm0iXSwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2VicGFjazovL2NvbnN0YW50LWNvbnRhY3QtZm9ybXMvLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vZm9ybXMuanM/YTEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ3aW5kb3cuQ1RDVEZvcm1zID0ge307XG5cbiggZnVuY3Rpb24oIHdpbmRvdywgdGhhdCApIHtcblxuXHQvKipcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqXG5cdCAqIEBhdXRob3IgQ29uc3RhbnQgQ29udGFjdFxuXHQgKiBAc2luY2UgMS4wLjBcblx0ICovXG5cdHRoYXQuaW5pdCA9ICgpID0+IHtcblx0XHR0aGF0LmNhY2hlKCk7XG5cdFx0dGhhdC5iaW5kRXZlbnRzKCk7XG5cdH07XG5cblx0LyoqXG5cdCAqIENhY2hlIERPTSBlbGVtZW50cy5cblx0ICpcblx0ICogQGF1dGhvciBDb25zdGFudCBDb250YWN0XG5cdCAqIEBzaW5jZSAxLjAuMFxuXHQgKi9cblx0dGhhdC5jYWNoZSA9ICgpID0+IHtcblx0XHR0aGF0LmNhY2hlID0ge1xuXHRcdFx0d2luZG93OiB3aW5kb3csXG5cdFx0XHRkaXNjb25uZWN0OiAnLmN0Y3QtZGlzY29ubmVjdCcsXG5cdFx0fTtcblx0fTtcblxuXHQvKipcblx0ICogQXR0YWNoIGNhbGxiYWNrcyB0byBldmVudHMuXG5cdCAqXG5cdCAqIEBhdXRob3IgQ29uc3RhbnQgQ29udGFjdFxuXHQgKiBAc2luY2UgMS4wLjBcblx0ICovXG5cdHRoYXQuYmluZEV2ZW50cyA9ICgpID0+IHtcblx0XHRsZXQgZGlzY29ubmVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhhdC5jYWNoZS5kaXNjb25uZWN0KTtcblx0XHRpZiAoZGlzY29ubmVjdCkge1xuXHRcdFx0QXJyYXkuZnJvbShkaXNjb25uZWN0KS5mb3JFYWNoKChpdGVtKT0+e1xuXHRcdFx0XHRpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXHRcdFx0XHRcdHJldHVybiBjb25maXJtKHdpbmRvdy5jdGN0VGV4dHMuZGlzY29ubmVjdGNvbmZpcm0pO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fTtcblxuXHR0aGF0LmluaXQoKTtcblxufSAoIHdpbmRvdywgd2luZG93LkNUQ1RGb3JtcyApICk7XG4iXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLENBQUNDLFNBQVMsR0FBRyxDQUFDLENBQUM7QUFFbkIsV0FBVUQsTUFBTSxFQUFFRSxJQUFJLEVBQUc7RUFFMUI7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0NBLElBQUksQ0FBQ0MsSUFBSSxHQUFHLFlBQU07SUFDakJELElBQUksQ0FBQ0UsS0FBSyxDQUFDLENBQUM7SUFDWkYsSUFBSSxDQUFDRyxVQUFVLENBQUMsQ0FBQztFQUNsQixDQUFDOztFQUVEO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNDSCxJQUFJLENBQUNFLEtBQUssR0FBRyxZQUFNO0lBQ2xCRixJQUFJLENBQUNFLEtBQUssR0FBRztNQUNaSixNQUFNLEVBQUVBLE1BQU07TUFDZE0sVUFBVSxFQUFFO0lBQ2IsQ0FBQztFQUNGLENBQUM7O0VBRUQ7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0NKLElBQUksQ0FBQ0csVUFBVSxHQUFHLFlBQU07SUFDdkIsSUFBSUMsVUFBVSxHQUFHQyxRQUFRLENBQUNDLGdCQUFnQixDQUFDTixJQUFJLENBQUNFLEtBQUssQ0FBQ0UsVUFBVSxDQUFDO0lBQ2pFLElBQUlBLFVBQVUsRUFBRTtNQUNmRyxLQUFLLENBQUNDLElBQUksQ0FBQ0osVUFBVSxDQUFDLENBQUNLLE9BQU8sQ0FBQyxVQUFDQyxJQUFJLEVBQUc7UUFDdENBLElBQUksQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07VUFDcEMsT0FBT0MsT0FBTyxDQUFDZCxNQUFNLENBQUNlLFNBQVMsQ0FBQ0MsaUJBQWlCLENBQUM7UUFDbkQsQ0FBQyxDQUFDO01BQ0gsQ0FBQyxDQUFDO0lBQ0g7RUFDRCxDQUFDO0VBRURkLElBQUksQ0FBQ0MsSUFBSSxDQUFDLENBQUM7QUFFWixDQUFDLEVBQUdILE1BQU0sRUFBRUEsTUFBTSxDQUFDQyxTQUFVLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/forms.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/index.js":
/*!**********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ajax */ \"./assets/js/ctct-plugin-admin/ajax.js\");\n/* harmony import */ var _ajax__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_ajax__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _builder__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./builder */ \"./assets/js/ctct-plugin-admin/builder.js\");\n/* harmony import */ var _builder__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_builder__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./forms */ \"./assets/js/ctct-plugin-admin/forms.js\");\n/* harmony import */ var _forms__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_forms__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modal */ \"./assets/js/ctct-plugin-admin/modal.js\");\n/* harmony import */ var _modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _optins__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./optins */ \"./assets/js/ctct-plugin-admin/optins.js\");\n/* harmony import */ var _optins__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_optins__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _clipboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clipboard */ \"./assets/js/ctct-plugin-admin/clipboard.js\");\n/* harmony import */ var _clipboard__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_clipboard__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hc3NldHMvanMvY3RjdC1wbHVnaW4tYWRtaW4vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jb25zdGFudC1jb250YWN0LWZvcm1zLy4vYXNzZXRzL2pzL2N0Y3QtcGx1Z2luLWFkbWluL2luZGV4LmpzPzkyOWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuL2FqYXgnO1xuaW1wb3J0ICcuL2J1aWxkZXInO1xuaW1wb3J0ICcuL2Zvcm1zJztcbmltcG9ydCAnLi9tb2RhbCc7XG5pbXBvcnQgJy4vb3B0aW5zJztcbmltcG9ydCAnLi9jbGlwYm9hcmQnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/index.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/modal.js":
/*!**********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/modal.js ***!
  \**********************************************/
/***/ (function() {

eval("window.CTCTModal = {};\n(function (window, $, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.cache = function () {\n    app.cache = {\n      window: window,\n      notConnectedModalSelector: document.querySelector('#ctct-not-connected-modal'),\n      notConnectedModalClose: document.querySelector('#ctct-not-connected-modal .ctct-modal-close'),\n      textareaModal: document.querySelector('#ctct-custom-textarea-modal'),\n      textareaLink: document.querySelector('#ctct-open-textarea-info'),\n      textareaModalClose: document.querySelector('#ctct-custom-textarea-modal .ctct-modal-close'),\n      deleteLogLink: document.querySelector('#deletelog')\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.bindEvents = function () {\n    if (app.cache.notConnectedModalClose) {\n      app.cache.notConnectedModalClose.addEventListener('click', function (e) {\n        e.preventDefault();\n        app.cache.notConnectedModalSelector.classList.remove('ctct-modal-open');\n        var data = new FormData();\n        data.append('action', 'ctct_dismiss_first_modal');\n        data.append('ctct_is_dismissed', 'true');\n        fetch(window.ajaxurl, options = {\n          method: 'POST',\n          body: data\n        }).then(function (response) {\n          return response.json();\n        }).then(function (response) {\n          if ('undefined' === typeof response.success) {\n            return false;\n          }\n          console.log(response.data.message);\n        });\n      });\n    }\n    if (app.cache.textareaModalClose) {\n      app.cache.textareaModalClose.addEventListener('click', function (e) {\n        app.cache.textareaModal.classList.remove('ctct-modal-open');\n      });\n    }\n    if (app.cache.textareaLink) {\n      app.cache.textareaLink.addEventListener('click', function () {\n        app.cache.textareaModal.classList.add('ctct-modal-open');\n      });\n    }\n    if (app.cache.deleteLogLink) {\n      app.cache.deleteLogLink.addEventListener('click', function (event) {\n        event.preventDefault();\n\n        // Get the link that was clicked on so we can redirect to it if the user confirms.\n        var deleteLogLink = event.currentTarget.getAttribute('href');\n        $('#confirmdelete').dialog({\n          resizable: false,\n          height: 'auto',\n          width: 400,\n          modal: true,\n          buttons: {\n            'Yes': function Yes() {\n              // If the user confirms the action, redirect them to the deletion page.\n              window.location.replace(deleteLogLink);\n            },\n            'Cancel': function Cancel() {\n              $('#confirmdelete').closest('.ui-dialog-content').dialog('close');\n            }\n          }\n        });\n      });\n    }\n  };\n  app.init();\n})(window, jQuery, window.CTCTModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/modal.js\n");

/***/ }),

/***/ "./assets/js/ctct-plugin-admin/optins.js":
/*!***********************************************!*\
  !*** ./assets/js/ctct-plugin-admin/optins.js ***!
  \***********************************************/
/***/ (function() {

eval("window.CTCT_OptIns = {};\n(function (window, app) {\n  /**\n   * @constructor\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.init = function () {\n    app.cache();\n    app.bindEvents();\n  };\n\n  /**\n   * Cache DOM elements.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.cache = function () {\n    app.cache = {\n      optinNoConn: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox #_ctct_opt_in_not_connected'),\n      list: document.querySelectorAll('#cmb2-metabox-ctct_0_list_metabox .attached-posts-wrap .retrieved li'),\n      title: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox .cmb2-id-email-optin-title'),\n      optin: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox .cmb2-id--ctct-opt-in'),\n      instruct: document.querySelectorAll('#cmb2-metabox-ctct_1_optin_metabox .cmb2-id--ctct-opt-in-instructions')\n    };\n  };\n\n  /**\n   * Attach callbacks to events.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.bindEvents = function () {\n    if (app.cache.optinNoConn.length) {\n      app.toggleNoConnectionFields();\n\n      // Bind to fire when needed.\n      Array.from(app.cache.optinNoConn).forEach(function (item) {\n        item.addEventListener('change', function () {\n          app.toggleNoConnectionFields();\n        });\n      });\n    } else {\n      // Fire once to get our loaded state set up.\n      app.toggleConnectionFields();\n\n      // Bind to fire when needed.\n      Array.from(app.cache.list).forEach(function (item) {\n        item.addEventListener('change', function () {\n          app.toggleConnectionFields();\n        });\n      });\n    }\n  };\n\n  /**\n   * Toggle unnecessary, unconnected optin fields if we're not showing the opt-in.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.toggleNoConnectionFields = function () {\n    if (app.cache.optinNoConn.checked) {\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'block';\n      });\n    } else {\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'none';\n      });\n    }\n  };\n\n  /**\n   *  Toggle unnecessary, *connected* optin fields if we're not showing the opt-in.\n   *\n   * @author Constant Contact\n   * @since 1.0.0\n   */\n  app.toggleConnectionFields = function () {\n    // If checked, show them, else hide it.\n    if (0 < app.cache.list.length) {\n      Array.from(app.cache.title).forEach(function (item) {\n        item.style.display = 'block';\n      });\n      Array.from(app.cache.optin).forEach(function (item) {\n        item.style.display = 'block';\n      });\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'block';\n      });\n      //app.cache.instruct.slideDown();\n    } else {\n      Array.from(app.cache.title).forEach(function (item) {\n        item.style.display = 'none';\n      });\n      Array.from(app.cache.optin).forEach(function (item) {\n        item.style.display = 'none';\n      });\n      Array.from(app.cache.instruct).forEach(function (item) {\n        item.style.display = 'none';\n      });\n    }\n  };\n  app.init();\n})(window, window.CTCT_OptIns);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/ctct-plugin-admin/optins.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/js/ctct-plugin-admin/index.js");
/******/ 	
/******/ })()
;